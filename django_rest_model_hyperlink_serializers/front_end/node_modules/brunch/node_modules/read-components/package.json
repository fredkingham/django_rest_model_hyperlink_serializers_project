{
  "name": "read-components",
  "version": "0.5.1",
  "description": "Read bower and component(1) components",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/paulmillr/read-components.git"
  },
  "author": {
    "name": "Paul Miller",
    "url": "http://paulmillr.com"
  },
  "license": "BSD",
  "dependencies": {
    "async-each": "~0.1.1"
  },
  "devDependencies": {
    "mocha": "~1.12.0",
    "chai": "~1.7.0"
  },
  "readme": "# read-components\n\nRead Twitter Bower and component(1) components.\n\nInstall with `npm install read-components`.\n\nread-components was made for automatic builders like [Brunch](http://brunch.io).\nAutomatic means you don’t need to specify bower files which will be built.\nInstead, read-components reads root `bower.json`, opens `bower.json` of\nall packages and their dependencies and auto-calculates concatenation order.\n\nThis requires files to have `dependencies` and `main` properties specified.\nBut not all bower packages have `bower.json` with `main` property specified.\nI’d say less than 50%. So parsing these will fail:\n\n```json\n// Root bower.json\n{\n  ...\n  dependencies: {\n    \"chaplin\": \"*\"\n  }\n}\n\n// bower_components/chaplin/bower.json\n{\n  ...\n  dependencies: {\"backbone\": \"*\"}\n}\n\n// bower_components/backbone/bower.json\n{// no deps, no `main`}\n```\n\nread-components solves the problem by allowing user to specify `bower.json`\n**overrides** in root config file.\n\nFor example, if your root bower.json looks like that\n\n```json\n{\n  \"dependencies\": {\"chaplin\": \"*\"},\n  \"overrides\": {\n    \"backbone\": {\n      \"main\": \"backbone.js\",\n      \"dependencies\": {\n        \"underscore\": \"~1.5.0\",\n        \"jquery\": \"~2.0.0\"\n      }\n    }\n  }\n}\n```\n\nread-components will treate backbone bower.json as completed and will produce\ncorrect output for automatic builders.\n\n## Usage\n\nNode.js:\n\n```javascript\nvar read = require('read-components');\n\n// Second argument is type,\n// in future it will support component(1).\nread('your-project-dir-with-bower.json', 'bower', function(error, components) {\n  console.log('All components:', components);\n});\n\nread('.', 'bower', function(error, components) {});\n```\n\nOutput is a list of packages like this:\n\n```json\n[{ name: 'd',\n  version: '1.0.2',\n  files: [ '/Users/john/project/bower_components/d/index.js' ],\n  dependencies: { },\n  sortingLevel: 2 },\n{ name: 'e',\n  version: '1.0.1',\n  files: [ '/Users/paul/project/bower_components/e/index.js' ],\n  dependencies: { d: '~1.0.0' },\n  sortingLevel: 1 } ]\n```\n\nEach package will also have `sortingLevel` and `files` specified.\nYou can use it to get concatenation order like this:\n\n```javascript\n// Note that it is sorted like this by default.\npackages\n  .sort(function(a, b) {\n    var field = 'sortingLevel';\n    return b[field] - a[field];\n  })\n  .map(function(pkg) {\n    return pkg.files;\n  });\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Paul Miller (http://paulmillr.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "read-components@0.5.1",
  "dist": {
    "shasum": "a302bc482b28510d430c689d59e660c28bcde773"
  },
  "_from": "read-components@~0.5.1"
}
